package gdky005.run.jarfile;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import kaola.monkey.StartCommond;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * Created by WangQing on 2017/4/28.
 */
public class ControlDirection implements ActionListener {

    private static final int KEYCODE_ENTER = 66;
    private static final int KEYCODE_OK = 23;
    private static final int KEYCODE_DPAD_GOBACK = 4;
    private static final int KEYCODE_DPAD_UP = 19;
    private static final int KEYCODE_DPAD_DOWN = 20;
    private static final int KEYCODE_DPAD_LEFT = 21;
    private static final int KEYCODE_DPAD_RIGHT = 22;
    private static final int KEYCODE_DPAD_VOLUME_DOWN = 25;
    private static final int KEYCODE_DPAD_VOLUME_UP = 24;
    private static final int KEYCODE_DPAD_MENU = 82;
    private static final int KEYCODE_DPAD_HOME = 3;


    private JButton upBtn;
    private JButton downBtn;
    private JButton okBtn;
    private JButton leftBtn;
    private JButton rightBtn;
    private JButton okBtn1;
    private JButton cancelBtn;
    private JPanel topPanel;
    private JLabel title;
    private JButton volume_down;
    private JButton volume_up;
    private JButton menu;
    private JButton home;

    private Font getSystemTextFont() {
//        return WebFonts.getSystemTextFont();
        return new Font("宋体", Font.BOLD, 16);
    }

    public ControlDirection() {

        upBtn.setFont(getSystemTextFont());
        downBtn.setFont(getSystemTextFont());
        okBtn.setFont(getSystemTextFont());
        leftBtn.setFont(getSystemTextFont());
        rightBtn.setFont(getSystemTextFont());
        okBtn1.setFont(getSystemTextFont());
        cancelBtn.setFont(getSystemTextFont());
        topPanel.setFont(getSystemTextFont());
        title.setFont(getSystemTextFont());
        volume_down.setFont(getSystemTextFont());
        volume_up.setFont(getSystemTextFont());
        menu.setFont(getSystemTextFont());
        home.setFont(getSystemTextFont());


        upBtn.addActionListener(this);
        downBtn.addActionListener(this);
        okBtn.addActionListener(this);
        leftBtn.addActionListener(this);
        rightBtn.addActionListener(this);
        okBtn1.addActionListener(this);
        cancelBtn.addActionListener(this);
        volume_down.addActionListener(this);
        volume_up.addActionListener(this);
        menu.addActionListener(this);
        home.addActionListener(this);
    }


    /**
     * 界面支持方向键，事件是android的标准事件；
     * KEYCODE_ENTER     回车键     66
     * KEYCODE_DPAD_CENTER     导航键 确定键     23
     * KEYCODE_DPAD_UP     导航键 向上     19
     * KEYCODE_DPAD_DOWN     导航键 向下     20
     * KEYCODE_DPAD_LEFT     导航键 向左     21
     * KEYCODE_DPAD_RIGHT     导航键 向右     22
     * <p>
     * adb可模拟方向键，方法：adb shell  input  keyevent  21/22/19...
     *
     * @param e
     */
    @Override
    public void actionPerformed(ActionEvent e) {


        String text = "";
        int directionCode = 0;

        if (e.getSource() == upBtn) {
            text = "上";
            directionCode = KEYCODE_DPAD_UP;
        } else if (e.getSource() == downBtn) {
            text = "下";
            directionCode = KEYCODE_DPAD_DOWN;
        } else if (e.getSource() == leftBtn) {
            text = "左";
            directionCode = KEYCODE_DPAD_LEFT;
        } else if (e.getSource() == rightBtn) {
            text = "右";
            directionCode = KEYCODE_DPAD_RIGHT;
        } else if (e.getSource() == okBtn) {
            text = "Ok";
            directionCode = KEYCODE_OK;
        } else if (e.getSource() == okBtn1) {
            text = "确定";
            directionCode = KEYCODE_ENTER;
        } else if (e.getSource() == cancelBtn) {
            text = "返回";
            directionCode = KEYCODE_DPAD_GOBACK;
        } else if (e.getSource() == volume_down) {
            text = "音量减";
            directionCode = KEYCODE_DPAD_VOLUME_DOWN;
        } else if (e.getSource() == volume_up) {
            text = "音量加";
            directionCode = KEYCODE_DPAD_VOLUME_UP;
        } else if (e.getSource() == menu) {
            text = "菜单键";
            directionCode = KEYCODE_DPAD_MENU;
        } else if (e.getSource() == home) {
            text = "home键";
            directionCode = KEYCODE_DPAD_HOME;
        }

        String adbShell = "adb shell input keyevent " + directionCode;
        StartCommond cmd = new StartCommond();
        cmd.commond(adbShell, text);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        topPanel = new JPanel();
        topPanel.setLayout(new GridBagLayout());
        topPanel.setFont(new Font(topPanel.getFont().getName(), topPanel.getFont().getStyle(), 48));
        okBtn = new JButton();
        okBtn.setText("OK");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 35;
        gbc.ipady = 35;
        gbc.insets = new Insets(10, 10, 10, 10);
        topPanel.add(okBtn, gbc);
        upBtn = new JButton();
        upBtn.setText("上");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 50;
        gbc.ipady = 45;
        topPanel.add(upBtn, gbc);
        downBtn = new JButton();
        downBtn.setText("下");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 50;
        gbc.ipady = 45;
        topPanel.add(downBtn, gbc);
        leftBtn = new JButton();
        leftBtn.setText("左");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 50;
        gbc.ipady = 45;
        topPanel.add(leftBtn, gbc);
        rightBtn = new JButton();
        rightBtn.setText("右");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 50;
        gbc.ipady = 45;
        topPanel.add(rightBtn, gbc);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 7;
        gbc.gridwidth = 3;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.ipady = 50;
        topPanel.add(panel1, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        okBtn1 = new JButton();
        okBtn1.setText("确定");
        panel2.add(okBtn1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(70, 50), null, new Dimension(-1, 100), 0, false));
        cancelBtn = new JButton();
        cancelBtn.setText("返回");
        panel2.add(cancelBtn, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(70, 50), null, new Dimension(-1, 100), 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel3, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        menu = new JButton();
        menu.setText("菜单键");
        panel3.add(menu, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(70, 50), null, new Dimension(-1, 100), 0, false));
        home = new JButton();
        home.setText("Home键");
        panel3.add(home, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(70, 50), null, new Dimension(-1, 100), 0, false));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        gbc.ipady = 70;
        topPanel.add(spacer2, gbc);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 3;
        gbc.fill = GridBagConstraints.BOTH;
        topPanel.add(panel4, gbc);
        title = new JLabel();
        title.setEnabled(true);
        title.setFont(new Font(title.getFont().getName(), Font.BOLD, 36));
        title.setText("简易控制器");
        panel4.add(title, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.VERTICAL;
        gbc.ipady = 50;
        topPanel.add(spacer3, gbc);
        volume_down = new JButton();
        volume_down.setText("音量 -");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipady = 15;
        topPanel.add(volume_down, gbc);
        volume_up = new JButton();
        volume_up.setText("音量 +");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipady = 15;
        topPanel.add(volume_up, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return topPanel;
    }
}
